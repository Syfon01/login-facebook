{"ast":null,"code":"import _defineProperty from \"C:\\\\laragon\\\\www\\\\team-triton-finance_tracker_app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\laragon\\\\www\\\\team-triton-finance_tracker_app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\laragon\\\\www\\\\team-triton-finance_tracker_app\\\\frontend\\\\src\\\\pages\\\\Signup.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { Button, Row, Col, Container, Alert } from 'reactstrap';\nimport { InputField, EmailField, Password } from \"../components\";\nimport { signIn } from '../utils/APIRequest';\nimport { UserContext } from '../UserContext';\nimport { Link } from 'react-router-dom';\nimport Loader from \"../components/Loader\";\nimport \"../styles/Sigup.css\";\n\nfunction Signup(props) {\n  const _useState = useState({\n    fullname: \"\",\n    username: \"\",\n    email: \"\",\n    phonenumber: \"\",\n    password1: \"\",\n    password2: \"\",\n    emailIsValid: false,\n    password1IsValid: false,\n    loading: false,\n    alert: false,\n    alertText: \"\",\n    alertColor: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        set = _useState2[1];\n\n  const _useContext = useContext(UserContext),\n        updateUser = _useContext.updateUser;\n\n  const handleInput = ({\n    target,\n    valid\n  }) => {\n    const name = target.name,\n          value = target.value;\n\n    if (name === \"password1\" || name === \"email\") {\n      set(values => _objectSpread({}, values, {\n        [name]: value,\n        [\"\".concat(name, \"IsValid\")]: valid\n      }));\n    } else {\n      set(values => _objectSpread({}, values, {\n        [name]: value\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    let fullname = state.fullname,\n        username = state.username,\n        phonenumber = state.phonenumber,\n        emailIsValid = state.emailIsValid,\n        password1IsValid = state.password1IsValid,\n        password1 = state.password1,\n        password2 = state.password2;\n    return !fullname || !username || !phonenumber || !emailIsValid || !password1IsValid || !(password1 === password2);\n  };\n\n  const handleSubmit = async () => {\n    if (validateForm()) return;\n    let fullname = state.fullname,\n        username = state.username,\n        email = state.email,\n        phonenumber = state.phonenumber,\n        password1 = state.password1,\n        password2 = state.password2;\n\n    try {\n      set(values => _objectSpread({}, values, {\n        loading: true\n      }));\n      const response = await fetch(\"https://team-trion.herokuapp.com/register/\", {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          first_name: fullname.split(\" \")[0],\n          last_name: fullname.split(\" \")[1] || \"o\",\n          username,\n          email,\n          phonenumber,\n          password1,\n          password2\n        })\n      });\n      let status = response.status;\n      const data = await response.json();\n\n      if (status === 201 || status === 200) {\n        let payload = await signIn({\n          username,\n          password: password1\n        });\n        updateUser(payload);\n        localStorage[\"_authuser\"] = JSON.stringify(payload);\n        props.history.push(\"/report\");\n      } else {\n        console.log(Object.keys(data)[0], data, data[Object.keys(data)[0]]);\n        let message = Array.isArray(data) ? data[0] : data[Object.keys(data)[0]][0];\n        set(state => _objectSpread({}, state, {\n          loading: false,\n          alert: true,\n          alertColor: \"danger\",\n          alertText: message || \"An Error Occured\"\n        }));\n      }\n    } catch (error) {}\n  };\n\n  return React.createElement(\"div\", {\n    className: \"gContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Container, {\n    className: \"form-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sform-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Sign Up To Have An Account\"), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"just fill the form below and you are perfect!\")), React.createElement(Alert, {\n    isOpen: state.alert,\n    toggle: () => set(state => _objectSpread({}, state, {\n      alert: false\n    })),\n    color: state.alertColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, state.alertText), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: \"6\",\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(InputField, {\n    id: \"fullname\",\n    label: \"Full Name\",\n    required: true,\n    className: \"ctrl md\",\n    type: \"text\",\n    name: \"fullname\",\n    onKeyUp: handleInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })), React.createElement(Col, {\n    md: \"6\",\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(InputField, {\n    id: \"usernanme\",\n    label: \"User Name\",\n    required: true,\n    className: \"ctrl md\",\n    type: \"text\",\n    name: \"username\",\n    onKeyUp: handleInput,\n    autoComplete: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: \"6\",\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(EmailField, {\n    className: \"ctrl md\",\n    type: \"email\",\n    name: \"email\",\n    id: \"user-email\",\n    onKeyUp: handleInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  })), React.createElement(Col, {\n    md: \"6\",\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(InputField, {\n    id: \"phone-number\",\n    label: \"Phone Number\",\n    required: true,\n    className: \"ctrl md\",\n    type: \"number\",\n    name: \"phonenumber\",\n    onKeyUp: handleInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: \"6\",\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(Password, {\n    id: \"password1\",\n    label: \"Password\",\n    required: true,\n    className: \"ctrl md\",\n    type: \"text\",\n    name: \"password1\",\n    visibilityControl: false,\n    onKeyUp: handleInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  })), React.createElement(Col, {\n    md: \"6\",\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(InputField, {\n    id: \"password2\",\n    label: \"Confirm Password\",\n    className: \"ctrl md\",\n    type: \"password\",\n    name: \"password2\",\n    onKeyUp: handleInput,\n    validInput: state.password2 >= 1 ? state.password1 === state.password2 : true,\n    errorText: \"password does not match!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Col, {\n    className: \"space-top-25\",\n    md: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"success\",\n    block: true,\n    onClick: handleSubmit,\n    disabled: state.loading || validateForm(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Sign Up\", state.loading && React.createElement(Loader, {\n    width: \"30px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"mt-1 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, \"Already have an Account ? \", React.createElement(Link, {\n    to: \"/\",\n    className: \"text-signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, \"Sign In\")))))));\n}\n\nexport default Signup;","map":{"version":3,"sources":["C:\\laragon\\www\\team-triton-finance_tracker_app\\frontend\\src\\pages\\Signup.js"],"names":["React","useState","useContext","Button","Row","Col","Container","Alert","InputField","EmailField","Password","signIn","UserContext","Link","Loader","Signup","props","fullname","username","email","phonenumber","password1","password2","emailIsValid","password1IsValid","loading","alert","alertText","alertColor","state","set","updateUser","handleInput","target","valid","name","value","values","validateForm","handleSubmit","response","fetch","method","mode","cache","headers","body","JSON","stringify","first_name","split","last_name","status","data","json","payload","password","localStorage","history","push","console","log","Object","keys","message","Array","isArray","error"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport { Button, Row, Col, Container, Alert } from 'reactstrap';\r\nimport { InputField, EmailField, Password  } from \"../components\";\r\nimport { signIn } from '../utils/APIRequest';\r\nimport { UserContext } from '../UserContext';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from \"../components/Loader\";\r\nimport \"../styles/Sigup.css\";\r\n\r\nfunction Signup(props) {\r\n\r\n    const [ state, set ] = useState({\r\n        fullname:\"\",\r\n        username:\"\",\r\n        email:\"\",\r\n        phonenumber:\"\",\r\n        password1:\"\",\r\n        password2:\"\",\r\n        emailIsValid:false,\r\n        password1IsValid:false,\r\n        loading:false,\r\n        alert:false,\r\n        alertText:\"\",\r\n        alertColor:\"\"\r\n    })\r\n\r\n    const { updateUser } = useContext(UserContext);\r\n\r\n\r\n    const handleInput = ({ target, valid })=>{\r\n        const { name, value } = target;\r\n        if(name === \"password1\" || name === \"email\"){\r\n            set(values=> ({...values, [name]:value, [`${name}IsValid`]: valid }));\r\n        }else{\r\n            set(values=> ({...values, [name]:value }));\r\n        }\r\n    }\r\n\r\n     const validateForm = ()=>{\r\n        let {\r\n            fullname,\r\n            username,\r\n            phonenumber,\r\n            emailIsValid,\r\n            password1IsValid,\r\n            password1,\r\n            password2\r\n        } = state\r\n        \r\n        return !fullname || !username ||!phonenumber ||!emailIsValid || !password1IsValid || !(password1 === password2);\r\n    }\r\n\r\n    const handleSubmit = async ()=>{\r\n        if(validateForm()) return;\r\n\r\n        let { fullname,username,email,phonenumber,password1,password2 } = state;\r\n\r\n        try {\r\n            set(values => ({ ...values, loading:true }));\r\n            const response = await fetch(\"https://team-trion.herokuapp.com/register/\",{\r\n                method: 'POST', \r\n                mode: 'cors', \r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    first_name: fullname.split(\" \")[0],\r\n                    last_name: fullname.split(\" \")[1] || \"o\",\r\n                    username,\r\n                    email,\r\n                    phonenumber,\r\n                    password1,\r\n                    password2\r\n                })\r\n            });\r\n\r\n            let { status } = response;\r\n            const data = await response.json();\r\n\r\n            if(status === 201 || status === 200 ){\r\n                let payload = await signIn({ username,password:password1 })\r\n                updateUser(payload);\r\n                localStorage[\"_authuser\"] = JSON.stringify(payload);\r\n                props.history.push(\"/report\");\r\n            }else{\r\n                console.log(Object.keys(data)[0], data, data[Object.keys(data)[0]]);\r\n                let message = Array.isArray(data) \r\n                    ?\r\n                    data[0]\r\n                    :\r\n                    data[Object.keys(data)[0]][0];\r\n                set(state=>({\r\n                    ...state,\r\n                    loading:false,\r\n                    alert:true,\r\n                    alertColor:\"danger\",\r\n                    alertText: message || \"An Error Occured\"\r\n                }))\r\n            } \r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"gContainer\" >\r\n            <Container className=\"form-wrap\">\r\n                <div className=\"sform-text\">\r\n                    <h5>Sign Up To Have An Account</h5>\r\n                    <h6>just fill the form below and you are perfect!</h6>\r\n                </div>\r\n            <Alert \r\n                isOpen={ state.alert } \r\n                toggle={ ()=> set(state=>({...state, alert:false })) }\r\n                color = { state.alertColor }\r\n            > \r\n                { state.alertText }\r\n            </Alert>\r\n            <form>\r\n                <Row>\r\n                    <Col md=\"6\" xs=\"12\">\r\n                        <InputField \r\n                            id=\"fullname\"\r\n                            label=\"Full Name\"\r\n                            required = { true }\r\n                            className=\"ctrl md\"\r\n                            type = \"text\"\r\n                            name  = \"fullname\"\r\n                            onKeyUp = { handleInput }\r\n                        />\r\n                    </Col>\r\n                    <Col md=\"6\" xs=\"12\">\r\n                        <InputField \r\n                            id=\"usernanme\"\r\n                            label=\"User Name\"\r\n                            required = { true }\r\n                            className=\"ctrl md\"\r\n                            type = \"text\"\r\n                            name  = \"username\"\r\n                            onKeyUp = { handleInput }\r\n                            autoComplete = \"username\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"6\" xs=\"12\">\r\n                        <EmailField \r\n                            className=\"ctrl md\" \r\n                            type=\"email\" \r\n                            name=\"email\" \r\n                            id=\"user-email\"\r\n                            onKeyUp = { handleInput }\r\n                        />\r\n                    </Col>\r\n                    <Col md=\"6\" xs=\"12\">\r\n                        <InputField \r\n                            id=\"phone-number\"\r\n                            label=\"Phone Number\"\r\n                            required = { true }\r\n                            className=\"ctrl md\"\r\n                            type = \"number\"\r\n                            name  = \"phonenumber\"\r\n                            onKeyUp = { handleInput }\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"6\" xs=\"12\">\r\n                        <Password \r\n                            id=\"password1\"\r\n                            label=\"Password\"\r\n                            required = { true }\r\n                            className=\"ctrl md\"\r\n                            type = \"text\"\r\n                            name  = \"password1\"\r\n                            visibilityControl = { false }\r\n                            onKeyUp = { handleInput }\r\n                        />\r\n                    </Col>\r\n                    <Col md=\"6\" xs=\"12\">\r\n                        <InputField \r\n                            id=\"password2\"\r\n                            label=\"Confirm Password\"\r\n                            className=\"ctrl md\"\r\n                            type = \"password\"\r\n                            name  = \"password2\"\r\n                            onKeyUp = { handleInput }\r\n                            validInput = { state.password2 >= 1 ? state.password1 === state.password2 : true }\r\n                            errorText = { \"password does not match!\" }\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"space-top-25\" md=\"12\">\r\n                        <Button \r\n                            color=\"success\"\r\n                            block\r\n                            onClick = { handleSubmit }\r\n                            disabled = { state.loading || validateForm() }\r\n                            >\r\n                            Sign Up\r\n                            { state.loading && <Loader width=\"30px\" />}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <p className=\"mt-1 text-center\">Already have an Account ? <Link to=\"/\" className=\"text-signup\">Sign In</Link></p>\r\n                    </Col>\r\n                </Row>\r\n            </form>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n"]},"metadata":{},"sourceType":"module"}